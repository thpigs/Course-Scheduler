
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester; 
    
    public MainFrame() {
        initComponents();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
    }
    
    public void rebuildSemesterComboBoxes()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0)
        {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboBoxes()
    {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemester);
        selectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
        DefaultComboBoxModel model = (DefaultComboBoxModel)selectCourseComboBox.getModel();
        DefaultComboBoxModel model1 = (DefaultComboBoxModel)displayCourseStudentCombobox.getModel();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel)dropCourseCombobox.getModel();
        DefaultComboBoxModel model3 = (DefaultComboBoxModel)studentDropCourseCombobox.getModel();
        
        selectCourseComboBox.setModel(model);
        displayCourseStudentCombobox.setModel(model1);
        dropCourseCombobox.setModel(model2);
        studentDropCourseCombobox.setModel(model3);
        
        selectCourseComboBox.removeAllItems();
        displayCourseStudentCombobox.removeAllItems();
        dropCourseCombobox.removeAllItems();
        studentDropCourseCombobox.removeAllItems();

        for (int i = courses.size() - 1; i >= 0; i--)
        {
            selectCourseComboBox.addItem(courses.get(i));
            displayCourseStudentCombobox.addItem(courses.get(i));
            dropCourseCombobox.addItem(courses.get(i));
            studentDropCourseCombobox.addItem(courses.get(i));
        }
        
    }
    
    
    public void rebuildStudentComboBoxes()
    {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
  
        selectStudentComboBox.removeAllItems();
        displayStudentScheduleComboBox.removeAllItems();
        dropStudentCombobox.removeAllItems();
        selectStudentDropCourseCombobox.removeAllItems();
        
        DefaultComboBoxModel model = (DefaultComboBoxModel)selectStudentComboBox.getModel();
        DefaultComboBoxModel model1 = (DefaultComboBoxModel)displayStudentScheduleComboBox.getModel();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel)dropStudentCombobox.getModel();
        DefaultComboBoxModel model3 = (DefaultComboBoxModel)selectStudentDropCourseCombobox.getModel();
        
        selectStudentComboBox.setModel(model);
        displayStudentScheduleComboBox.setModel(model1);
        dropStudentCombobox.setModel(model2);
        selectStudentDropCourseCombobox.setModel(model3);
        
        for (int i = students.size() - 1; i >= 0; i--)
        {
            selectStudentComboBox.addItem(students.get(i).getLastName() + ", " + students.get(i).getFirstName());
            displayStudentScheduleComboBox.addItem(students.get(i).getLastName() + ", " + students.get(i).getFirstName());
            dropStudentCombobox.addItem(students.get(i).getLastName() + ", " + students.get(i).getFirstName());
            selectStudentDropCourseCombobox.addItem(students.get(i).getLastName() + ", " + students.get(i).getFirstName());
            
        }      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCourseStatusLabel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        courseCodeText = new javax.swing.JTextField();
        courseDescText = new javax.swing.JTextField();
        seatsSpinner = new javax.swing.JSpinner();
        addCourseButton = new javax.swing.JButton();
        addCourseLabel = new javax.swing.JLabel();
        addStudentStatusLabel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        studentIDText = new javax.swing.JTextField();
        firstNameText = new javax.swing.JTextField();
        addStudentButton = new javax.swing.JButton();
        lastNameText = new javax.swing.JTextField();
        addStudentLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        displayCourseStudentCombobox = new javax.swing.JComboBox<>();
        displayCourseStudentsButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayCourseTableScheduled = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayCourseTableWaitlisted = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        dropStudentCombobox = new javax.swing.JComboBox<>();
        dropStudentButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        dropStudentEventTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        dropCourseCombobox = new javax.swing.JComboBox<>();
        dropCourseButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropCourseScheduledTable = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        dropCourseWaitlistTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        scheduleCourseStatusLabel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        selectCourseComboBox = new javax.swing.JComboBox<>();
        selectStudentComboBox = new javax.swing.JComboBox<>();
        scheduleCourseButton = new javax.swing.JButton();
        scheduleCourseLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        displayStudentScheduleComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        displayScheduleButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        studentDropCourseCombobox = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        selectStudentDropCourseCombobox = new javax.swing.JComboBox<>();
        studentDropCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        studentDropCourseTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        displayCourseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton)
                        .addGap(18, 18, 18)
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(365, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSemesterSubmitButton)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(337, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jLabel4.setText("Course Code:");

        jLabel5.setText("Course Description:");

        jLabel6.setText("Seats:");

        addCourseButton.setText("Submit");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCourseStatusLabelLayout = new javax.swing.GroupLayout(addCourseStatusLabel);
        addCourseStatusLabel.setLayout(addCourseStatusLabelLayout);
        addCourseStatusLabelLayout.setHorizontalGroup(
            addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCourseStatusLabelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(61, 61, 61)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseDescText, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addCourseStatusLabelLayout.createSequentialGroup()
                        .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        addCourseStatusLabelLayout.setVerticalGroup(
            addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCourseStatusLabelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(courseCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(courseDescText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(addCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseButton)
                    .addComponent(addCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Course", addCourseStatusLabel);

        jLabel7.setText("Student ID:");

        jLabel8.setText("First Name:");

        jLabel9.setText("Last Name:");

        addStudentButton.setText("Submit");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentStatusLabelLayout = new javax.swing.GroupLayout(addStudentStatusLabel);
        addStudentStatusLabel.setLayout(addStudentStatusLabelLayout);
        addStudentStatusLabelLayout.setHorizontalGroup(
            addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentStatusLabelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(61, 61, 61)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(firstNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                        .addComponent(lastNameText)
                        .addComponent(studentIDText))
                    .addGroup(addStudentStatusLabelLayout.createSequentialGroup()
                        .addComponent(addStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(addStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(219, Short.MAX_VALUE))
        );
        addStudentStatusLabelLayout.setVerticalGroup(
            addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentStatusLabelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(studentIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(addStudentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStudentButton))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", addStudentStatusLabel);

        displayCourseStudentCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayCourseStudentsButton.setText("Display");
        displayCourseStudentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseStudentsButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Select Course:");

        displayCourseTableScheduled.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(displayCourseTableScheduled);
        if (displayCourseTableScheduled.getColumnModel().getColumnCount() > 0) {
            displayCourseTableScheduled.getColumnModel().getColumn(0).setResizable(false);
            displayCourseTableScheduled.getColumnModel().getColumn(1).setResizable(false);
            displayCourseTableScheduled.getColumnModel().getColumn(2).setResizable(false);
        }

        displayCourseTableWaitlisted.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(displayCourseTableWaitlisted);
        if (displayCourseTableWaitlisted.getColumnModel().getColumnCount() > 0) {
            displayCourseTableWaitlisted.getColumnModel().getColumn(0).setResizable(false);
            displayCourseTableWaitlisted.getColumnModel().getColumn(1).setResizable(false);
            displayCourseTableWaitlisted.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel11.setText("Scheduled Students");

        jLabel14.setText("Waitlisted Students");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayCourseStudentCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(displayCourseStudentsButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(175, 175, 175))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseStudentCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCourseStudentsButton)
                    .addComponent(jLabel10))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel4);

        jLabel16.setText("Select Student:");

        dropStudentCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropStudentCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentComboboxActionPerformed(evt);
            }
        });

        dropStudentButton.setText("Drop Student");
        dropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentButtonActionPerformed(evt);
            }
        });

        dropStudentEventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Events"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(dropStudentEventTable);
        if (dropStudentEventTable.getColumnModel().getColumnCount() > 0) {
            dropStudentEventTable.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(dropStudentCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(dropStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(dropStudentCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 69, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel5);

        jLabel17.setText("Select Course to be Dropped:");

        dropCourseCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropCourseButton.setText("Drop Course");
        dropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseButtonActionPerformed(evt);
            }
        });

        dropCourseScheduledTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dropped From Course Schedule"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(dropCourseScheduledTable);
        if (dropCourseScheduledTable.getColumnModel().getColumnCount() > 0) {
            dropCourseScheduledTable.getColumnModel().getColumn(0).setResizable(false);
        }

        dropCourseWaitlistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dropped From Course Waitlist"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(dropCourseWaitlistTable);
        if (dropCourseWaitlistTable.getColumnModel().getColumnCount() > 0) {
            dropCourseWaitlistTable.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(dropCourseCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dropCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(dropCourseCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseButton))
                .addGap(71, 71, 71)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        jLabel12.setText("Select Course:");

        jLabel13.setText("Select Student:");

        selectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCourseComboBoxActionPerformed(evt);
            }
        });

        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectStudentComboBoxActionPerformed(evt);
            }
        });

        scheduleCourseButton.setText("Submit");
        scheduleCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scheduleCourseStatusLabelLayout = new javax.swing.GroupLayout(scheduleCourseStatusLabel);
        scheduleCourseStatusLabel.setLayout(scheduleCourseStatusLabelLayout);
        scheduleCourseStatusLabelLayout.setHorizontalGroup(
            scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCourseStatusLabelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(57, 57, 57)
                .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scheduleCourseStatusLabelLayout.createSequentialGroup()
                        .addComponent(scheduleCourseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(scheduleCourseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(selectCourseComboBox, 0, 131, Short.MAX_VALUE)
                        .addComponent(selectStudentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(300, 300, 300))
        );
        scheduleCourseStatusLabelLayout.setVerticalGroup(
            scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCourseStatusLabelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(selectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(scheduleCourseStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleCourseButton)
                    .addComponent(scheduleCourseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Course", scheduleCourseStatusLabel);

        jLabel15.setText("Select Student:");

        displayStudentScheduleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayStudentScheduleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentScheduleComboBoxActionPerformed(evt);
            }
        });

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayScheduleTable);
        if (displayScheduleTable.getColumnModel().getColumnCount() > 0) {
            displayScheduleTable.getColumnModel().getColumn(0).setResizable(false);
            displayScheduleTable.getColumnModel().getColumn(1).setResizable(false);
        }

        displayScheduleButton.setText("Display");
        displayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayStudentScheduleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(425, 425, 425)
                .addComponent(displayScheduleButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(displayStudentScheduleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(displayScheduleButton)
                .addGap(33, 33, 33))
        );

        jTabbedPane3.addTab("Display Schedule", jPanel8);

        jLabel18.setText("Select Course to be Dropped:");

        studentDropCourseCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel19.setText("Select Student:");

        selectStudentDropCourseCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDropCourseButton.setText("Drop Course");
        studentDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseButtonActionPerformed(evt);
            }
        });

        studentDropCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null}
            },
            new String [] {
                "Student Drop Course Events"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(studentDropCourseTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentDropCourseCombobox, 0, 144, Short.MAX_VALUE)
                            .addComponent(selectStudentDropCourseCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(102, 102, 102)
                        .addComponent(studentDropCourseButton))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(studentDropCourseCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(selectStudentDropCourseCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", jPanel9);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        displayCoursesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(displayCoursesTable);

        displayCourseButton.setText("Display");
        displayCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addGap(29, 29, 29))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(displayCourseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayCourseButton)
                .addGap(82, 82, 82))
        );

        jTabbedPane3.addTab("Display Courses", jPanel7);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(changeSemesterButton)
                                .addGap(80, 80, 80)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton))
                .addGap(49, 49, 49)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        addSemesterTextfield.setText("");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void displayCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)displayCoursesTable.getModel();
        
        displayCoursesTableModel.setRowCount(0);
        Object[] rowData = new Object[3];
        
        for(CourseEntry course:courses)
        {
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayCourseButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemester);
        
        rebuildCourseComboBoxes();
        
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
        CourseEntry courseToAdd = new CourseEntry(currentSemester,courseCodeText.getText(),courseDescText.getText(),Integer.parseInt(seatsSpinner.getValue().toString()));
        CourseQueries.addCourse(courseToAdd);
        addCourseLabel.setText(courseCodeText.getText() + " has been added");
        courseCodeText.setText("");
        courseDescText.setText("");
        seatsSpinner.setValue(0);
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry student = new StudentEntry(studentIDText.getText(), firstNameText.getText(), lastNameText.getText());
        StudentQueries.addStudent(student);
        addStudentLabel.setText(lastNameText.getText() + ", " + firstNameText.getText() + " has been added.");
        studentIDText.setText("");
        firstNameText.setText("");
        lastNameText.setText("");
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void selectCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCourseComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_selectCourseComboBoxActionPerformed

    private void selectStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectStudentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectStudentComboBoxActionPerformed

    private void scheduleCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleCourseButtonActionPerformed
        // TODO add your handling code here:
        java.sql.Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());  
        
        String status;
        int seats = CourseQueries.getCourseSeats(currentSemester, selectCourseComboBox.getSelectedItem().toString());
        int seatsFilled = ScheduleQueries.getScheduledbyStudentCount(currentSemester, selectCourseComboBox.getSelectedItem().toString());
        if (seatsFilled >= seats)
            status = "w";
        else
            status = "s";
        
        ScheduleEntry schedule = new ScheduleEntry(currentSemester, StudentQueries.findStudentId(selectStudentComboBox.getSelectedItem().toString()), selectCourseComboBox.getSelectedItem().toString(), status, timestamp);
        ScheduleQueries.addScheduleEntry(schedule);
        
        if (schedule.getStatus().equals("s"))
           scheduleCourseLabel1.setText(schedule.getCourseCode() + " has been added to your schedule.");
        else
           scheduleCourseLabel1.setText(schedule.getCourseCode() + " has been added to the course waitlist.");
    }//GEN-LAST:event_scheduleCourseButtonActionPerformed

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void displayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleButtonActionPerformed
        // TODO add your handling code here:
        String studentid = displayStudentScheduleComboBox.getSelectedItem().toString();
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, StudentQueries.findStudentId(studentid));
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();
        
        displayScheduleTableModel.setRowCount(0);
        Object[] rowData = new Object[2];
                
        for(ScheduleEntry entry: schedule)
        {
            rowData[0] = entry.getCourseCode();
            rowData[1] = ScheduleQueries.getCourseStatus(StudentQueries.findStudentId(displayStudentScheduleComboBox.getSelectedItem().toString()), currentSemester, entry.getCourseCode());
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayScheduleButtonActionPerformed

    private void displayStudentScheduleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentScheduleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayStudentScheduleComboBoxActionPerformed

    private void displayCourseStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseStudentsButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<ScheduleEntry> schedules = ScheduleQueries.getSchedulesByCourse(currentSemester, displayCourseStudentCombobox.getSelectedItem().toString());
        
        DefaultTableModel displayCourseScheduledTableModel = (DefaultTableModel)displayCourseTableScheduled.getModel();
        DefaultTableModel displayCourseWaitlistedTableModel = (DefaultTableModel)displayCourseTableWaitlisted.getModel();
        displayCourseScheduledTableModel.setRowCount(0);
        displayCourseWaitlistedTableModel.setRowCount(0);
        Object[] rowData = new Object[3];
        
        for(ScheduleEntry entry:schedules)
        {
            if(entry.getStatus().equals("s"))
            {
                rowData[0] = StudentQueries.findStudentNameById(entry.getStudentID()).get(0);
                rowData[1] = StudentQueries.findStudentNameById(entry.getStudentID()).get(1);
                rowData[2] = entry.getStudentID();
                displayCourseScheduledTableModel.addRow(rowData);
            }
            else
            {
                rowData[0] = StudentQueries.findStudentNameById(entry.getStudentID()).get(0);
                rowData[1] = StudentQueries.findStudentNameById(entry.getStudentID()).get(1);
                rowData[2] = entry.getStudentID();
                displayCourseWaitlistedTableModel.addRow(rowData);
            }
        }
    }//GEN-LAST:event_displayCourseStudentsButtonActionPerformed

    private void dropStudentComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropStudentComboboxActionPerformed

    private void dropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentButtonActionPerformed
        // TODO add your handling code here:
        String id = StudentQueries.findStudentId(dropStudentCombobox.getSelectedItem().toString());
        DefaultTableModel droppedStudentEventsTableModel = (DefaultTableModel)dropStudentEventTable.getModel();
        droppedStudentEventsTableModel.setRowCount(0);
        
        Object[] rowData = new Object[1];    
        Object[] gap = new Object[1];
        rowData[0] = dropStudentCombobox.getSelectedItem().toString() + " " + id + " " + "has been dropped from the list of students.";
        droppedStudentEventsTableModel.addRow(rowData);
        droppedStudentEventsTableModel.addRow(gap);
        
        for(String semester:SemesterQueries.getSemesterList())
        {
            rowData[0] = "For  " + semester;
            droppedStudentEventsTableModel.addRow(rowData);
            
            for(ScheduleEntry course:ScheduleQueries.getScheduleByStudent(semester, id))
            {
                if(course.getStatus().equals("w"))
                {
                    rowData[0] = dropStudentCombobox.getSelectedItem().toString() + " " + id + " " + "has been dropped from the " + course.getCourseCode() + " waitlist IF 1";
                    droppedStudentEventsTableModel.addRow(rowData);
                }
                else if(ScheduleQueries.hasWaitlist(semester, course.getCourseCode()))
                {
                    String bumpedStudentID = ScheduleQueries.updateWaitlist(semester, course.getCourseCode());
                    rowData[0] = dropStudentCombobox.getSelectedItem().toString() + " " + id + " " + "has been dropped from IF 2.1" + course.getCourseCode();
                    droppedStudentEventsTableModel.addRow(rowData); 
                    ArrayList<String> name = StudentQueries.findStudentNameById(bumpedStudentID);
                    rowData[0] = name.get(0) + ", "+ name.get(1) + " " + bumpedStudentID + " has been scheduled into IF 2.2" + course.getCourseCode(); 
                    droppedStudentEventsTableModel.addRow(rowData); 
                }
                else
                {
                    rowData[0] = dropStudentCombobox.getSelectedItem().toString() + " " + id + " " + "has been dropped from IF 3" + course.getCourseCode();
                    droppedStudentEventsTableModel.addRow(rowData);
                }
                
            }
            droppedStudentEventsTableModel.addRow(gap);
        }
        ScheduleQueries.dropStudent(id);
        StudentQueries.dropStudent(id);   
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_dropStudentButtonActionPerformed

    private void dropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseButtonActionPerformed
        // TODO add your handling code here:
        String droppedCourse = dropCourseCombobox.getSelectedItem().toString();
        CourseQueries.dropCourse(currentSemester, droppedCourse);
        ArrayList<ScheduleEntry> affectedStudents = ScheduleQueries.adminDropCourse(currentSemester, droppedCourse);
        
        DefaultTableModel dropCourseTableModel = (DefaultTableModel)dropCourseScheduledTable.getModel();
        dropCourseTableModel.setRowCount(0);
        DefaultTableModel dropCourseWaitlistTableModel = (DefaultTableModel)dropCourseWaitlistTable.getModel();
        dropCourseWaitlistTableModel.setRowCount(0);
                
        for(ScheduleEntry entry:affectedStudents)
        {
            Object[] rowData = new Object[1];
            ArrayList<String> name = StudentQueries.findStudentNameById(entry.getStudentID());
            if(entry.getStatus().equals("s"))
            {
                rowData[0] = String.format("%s, %s %s has been droped from %s.", name.get(0), name.get(1), entry.getStudentID(), entry.getCourseCode());
                dropCourseTableModel.addRow(rowData);
            }
            else
            {
                rowData[0] = String.format("%s, %s %s has been removed from the %s waitlist.", name.get(0), name.get(1), entry.getStudentID(), entry.getCourseCode());
                dropCourseWaitlistTableModel.addRow(rowData);
            }
        }
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_dropCourseButtonActionPerformed

    private void studentDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel studentDropCourseTableModel = (DefaultTableModel)studentDropCourseTable.getModel();
        studentDropCourseTableModel.setRowCount(0);
        Object[] rowData = new Object[1];
        String id = StudentQueries.findStudentId(selectStudentDropCourseCombobox.getSelectedItem().toString());
        String bumpedStudent;
        String status = ScheduleQueries.getCourseStatus(id, currentSemester, studentDropCourseCombobox.getSelectedItem().toString());
        
        if(status.equals("w"))
        {
            rowData[0] = String.format("%s %s has been dropped from the %s waitlist", selectStudentDropCourseCombobox.getSelectedItem().toString(), id, studentDropCourseCombobox.getSelectedItem().toString());
            studentDropCourseTableModel.addRow(rowData);
        }
        else if(ScheduleQueries.hasWaitlist(currentSemester, studentDropCourseCombobox.getSelectedItem().toString()))
        {
            bumpedStudent = ScheduleQueries.updateWaitlist(currentSemester, studentDropCourseCombobox.getSelectedItem().toString());
            rowData[0] = String.format("%s %s has been dropped from %s.", selectStudentDropCourseCombobox.getSelectedItem().toString(), id, studentDropCourseCombobox.getSelectedItem().toString());
            studentDropCourseTableModel.addRow(rowData);
            rowData[0] = String.format("%s, %s %s has been scheduled into %s.", StudentQueries.findStudentNameById(bumpedStudent).get(0), StudentQueries.findStudentNameById(bumpedStudent).get(1), bumpedStudent, studentDropCourseCombobox.getSelectedItem().toString());
            studentDropCourseTableModel.addRow(rowData);
        }
        else
        {
            rowData[0] = String.format("%s %s has been dropped from %s.", selectStudentDropCourseCombobox.getSelectedItem().toString(), id, studentDropCourseCombobox.getSelectedItem().toString());
            studentDropCourseTableModel.addRow(rowData);
        }
        
        ScheduleQueries.studentDropCourse(currentSemester, studentDropCourseCombobox.getSelectedItem().toString(), id);
    }//GEN-LAST:event_studentDropCourseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JLabel addCourseLabel;
    private javax.swing.JPanel addCourseStatusLabel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JLabel addStudentLabel;
    private javax.swing.JPanel addStudentStatusLabel;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JTextField courseCodeText;
    private javax.swing.JTextField courseDescText;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayCourseButton;
    private javax.swing.JComboBox<String> displayCourseStudentCombobox;
    private javax.swing.JButton displayCourseStudentsButton;
    private javax.swing.JTable displayCourseTableScheduled;
    private javax.swing.JTable displayCourseTableWaitlisted;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JButton displayScheduleButton;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JComboBox<String> displayStudentScheduleComboBox;
    private javax.swing.JButton dropCourseButton;
    private javax.swing.JComboBox<String> dropCourseCombobox;
    private javax.swing.JTable dropCourseScheduledTable;
    private javax.swing.JTable dropCourseWaitlistTable;
    private javax.swing.JButton dropStudentButton;
    private javax.swing.JComboBox<String> dropStudentCombobox;
    private javax.swing.JTable dropStudentEventTable;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JButton scheduleCourseButton;
    private javax.swing.JLabel scheduleCourseLabel1;
    private javax.swing.JPanel scheduleCourseStatusLabel;
    private javax.swing.JSpinner seatsSpinner;
    private javax.swing.JComboBox<String> selectCourseComboBox;
    private javax.swing.JComboBox<String> selectStudentComboBox;
    private javax.swing.JComboBox<String> selectStudentDropCourseCombobox;
    private javax.swing.JButton studentDropCourseButton;
    private javax.swing.JComboBox<String> studentDropCourseCombobox;
    private javax.swing.JTable studentDropCourseTable;
    private javax.swing.JTextField studentIDText;
    // End of variables declaration//GEN-END:variables
}
